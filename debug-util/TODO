wcdu
====
finish discovery: implement auto-open
parse more SES pages
implement more commands (send, parse, display)
more error recovery
  add field to parsing structures indicating required number of bytes
better help
  add optional item field for parameters
  add optional item field for additional help
  add field for overall help
save and restore default configuration
optional bread crumbs in menu headings
serial on MSWin?
check reserved fields?
improve error propagation using exceptions
add more types to page 0x02 output
add INSTALL instructions
expand REQUIREMENTS
create README
create manual or fix specification
add sas ses dump <filename>
add SES page write capability to discovery
fix CLI SES pages for Pinot Grigio 02.05
detect attempted non-root access to ScsiPT
insulate __del__ routines from non-initialized objects
add option to specify password to unpack protected 7z firmware files
detect password-protected 7z firmware files
add firmware.py and fw.py to wcdu-guide
split out command line code from classes in firmware.py and fw.py
add an output pager and configuration for it
finish fw.py with multiple firmware types
finish firmwareses.py, try write_buffer, since SES 0e doesn't seem to work
wcdu persistent configuration (save and restore configuration)
make types disk and disk array equivalent so wcdu actually works with Wolf Creek

Wolf Creek firmware
===================
  test PLX 8700
  write PLX 9700
    Do I need more information?  Internalize the PDF first, translate to command line.
x   Find PLX SDK 7.20.
  restructure code
  write wrapper
    Where can each piece run?
    What other restrictions are there?
    What information and connections are needed for each piece?
    Can everything be updated from a single point?
      a compute canister
      both compute canisters
      an external workstation
    Determine how to discover if we're running on a computer canister.
x   Determine how to discover correspondence between compute processor and its BMC.
    Need to warn when pieces are requested but no firmware for them.
    Need to be able to specify "all" to update everything there's firmware for.
    Warnings could be interactive -- ask what to do.
    Need version management; handle multiple versions of same firmware.
  write manual
  package together for delivery
